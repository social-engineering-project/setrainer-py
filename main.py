from customtkinter import *
from os.path import isfile
from json import dumps, loads

LOGO = b'\x00\x00\x01\x00\x01\x00  \x00\x00\x01\x00 \x00\xa8\x10\x00\x00\x16\x00\x00\x00(\x00\x00\x00 \x00\x00\x00@\x00\x00\x00\x01\x00 \x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x02\x02\x02\x0e\x0b\r\x0f\x1a\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\r\x0f\x12\x1b\x0b\r\x0f\x1a\x02\x02\x03\x0e\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\xd4\xff\xff\x00CQb!m\x84\xa0\x8ey\x92\xb1\xbbz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcz\x93\xb2\xbcy\x92\xb1\xbbl\x83\x9f\x8f?L\\"\xc9\xf3\xff\x00\x01\x02\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\'/6\x00\x00\x00\x00\x00~\x99\xb9\x81\x8a\xa8\xcb\xfe\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8c\xaa\xce\xff\x8a\xa7\xca\xffv\x90\xae\x82\x00\x00\x00\x01!\'.\x00\x00\x00\x00\x00\x00\x00\x00\x00Udz\x00MYn\x05\x89\xa6\xc9\xac\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x82\x9e\xc0\xae09F\x06ERd\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x82\x00Ub{\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb0:CU\x06IVl\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8e\xac\xcf\xff\x8d\xab\xce\xff\x8b\xa9\xcb\xff\x8c\xaa\xcd\xff\x8e\xac\xd0\xff\x8d\xab\xce\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8d\xab\xcf\xff\x8d\xab\xcf\xff\x8d\xab\xcf\xff\x8d\xab\xcf\xff\x8d\xab\xcf\xff\x8d\xab\xcf\xff\x8d\xab\xcf\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8a\xa8\xca\xfff|\x96\xff=JY\xff/9E\xff3>J\xffSey\xff\x82\x9e\xbf\xff\x8d\xac\xcf\xff\x85\xa1\xc2\xffKZm\xff<JY\xff<JY\xff<JY\xff<JY\xff;IX\xffDTe\xff\x81\x9d\xbd\xff\x8d\xab\xce\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xffRcx\xff\x10\x14\x18\xff1;G\xffL\\o\xffDSd\xff\x1d#*\xff3>K\xff\x86\xa2\xc4\xff\x7f\x9a\xba\xff\x16\x1b \xff\'/9\xff<IX\xff;HW\xff;HW\xff:GV\xffDRd\xff\x81\x9c\xbd\xff\x8d\xab\xce\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8d\xab\xce\xff|\x97\xb6\xff\x17\x1c"\xffM]p\xff\x8b\xa9\xcc\xff\x8e\xad\xd0\xff\x8f\xad\xd1\xfft\x8c\xa9\xff\x16\x1b!\xffg}\x97\xff\x80\x9c\xbc\xff\x17\x1d"\xff_s\x8b\xff\x8f\xae\xd1\xff\x8d\xab\xce\xff\x8d\xab\xce\xff\x8d\xab\xce\xff\x8d\xab\xce\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8d\xab\xce\xff~\x99\xb8\xffM]q\xff~\x9a\xb9\xff\x8e\xad\xd0\xff\x8e\xad\xd0\xff\x8e\xad\xd0\xffr\x8b\xa7\xff\x14\x18\x1d\xffcx\x91\xff\x81\x9c\xbc\xff\x18\x1d"\xff`t\x8c\xff\x90\xb0\xd3\xff\x8e\xad\xd0\xff\x8e\xad\xd0\xff\x8e\xad\xd0\xff\x8d\xab\xce\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xce\xff\x8e\xac\xd0\xff\x8b\xa9\xcc\xff{\x95\xb4\xffbw\x90\xffBPa\xff\x18\x1d"\xff&/8\xff\x81\x9c\xbc\xff\x7f\x9a\xba\xff\x17\x1c!\xffAN_\xffcw\x90\xffau\x8e\xffau\x8e\xff`t\x8d\xffw\x91\xaf\xff\x8d\xab\xce\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8d\xab\xce\xff\x7f\x9a\xba\xff=JY\xff\x15\x19\x1f\xff\x13\x17\x1c\xff#+4\xffIXk\xff}\x97\xb7\xff\x8e\xac\xd0\xff~\x9a\xb9\xff\x16\x1b \xff\x14\x19\x1e\xff!(0\xff \'/\xff \'/\xff\x1f%-\xffXk\x81\xff\x8e\xac\xcf\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff@M]\xff\x18\x1e$\xffYl\x82\xffx\x91\xaf\xff\x87\xa4\xc5\xff\x8b\xa9\xcc\xff\x86\xa3\xc5\xff\x8c\xaa\xcd\xff~\x9a\xb9\xff\x17\x1c"\xffXl\x82\xff\x85\xa3\xc4\xff\x83\xa0\xc1\xff\x83\xa0\xc1\xff\x83\xa0\xc1\xff\x88\xa5\xc7\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x88\xa6\xc8\xff\'/9\xffGWi\xff\x92\xb1\xd5\xff\x8f\xae\xd1\xff\x90\xaf\xd3\xfff}\x96\xff/9E\xff\x81\x9d\xbd\xff\x7f\x9a\xba\xff\x18\x1d#\xff`t\x8d\xff\x91\xb0\xd4\xff\x8f\xad\xd1\xff\x8f\xad\xd1\xff\x8f\xad\xd1\xff\x8e\xac\xd0\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8d\xab\xce\xffFVg\xff\x1c")\xff`t\x8c\xffq\x89\xa5\xffbw\x90\xff &.\xff5@M\xff\x8a\xa7\xca\xff\x7f\x9a\xb9\xff\x17\x1b!\xff@N^\xffbw\x8f\xff`u\x8d\xff`u\x8d\xff_t\x8c\xffj\x81\x9c\xff\x8a\xa8\xca\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8d\xab\xce\xff\x82\x9e\xbf\xffESe\xff\x1f&.\xff\x1a!\'\xff\x1e%-\xff>L[\xff}\x98\xb8\xff\x8e\xac\xcf\xff\x81\x9d\xbe\xff0:F\xff \'/\xff")2\xff")2\xff")2\xff!\'0\xff:FU\xff\x87\xa4\xc6\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8d\xab\xce\xff\x8c\xaa\xcd\xff\x82\x9e\xbe\xff{\x95\xb4\xff\x81\x9d\xbd\xff\x8b\xaa\xcc\xff\x8d\xab\xce\xff\x8c\xaa\xcd\xff\x8b\xa9\xcc\xff\x86\xa3\xc5\xff\x85\xa2\xc3\xff\x85\xa2\xc3\xff\x85\xa2\xc3\xff\x85\xa2\xc3\xff\x85\xa2\xc3\xff\x87\xa4\xc5\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8d\xab\xce\xff\x8d\xab\xcf\xff\x8d\xab\xce\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xab\xce\xff\x8c\xab\xce\xff\x8c\xab\xce\xff\x8c\xab\xce\xff\x8c\xab\xce\xff\x8c\xab\xce\xff\x8c\xab\xce\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00Yh\x81\x00Tbz\x06\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb09CT\x06IVk\x00\x00\x00\x00\x00\x00\x00\x00\x00[k\x85\x00We~\x05\x89\xa6\xc9\xae\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x83\x9f\xc1\xb0;EW\x06KXn\x00\x00\x00\x00\x00\x00\x00\x00\x00fx\x93\x00`o\x89\x04\x8a\xa8\xcb\xaa\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x84\xa0\xc2\xac<EV\x05Rax\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x92\xa8\x00\x9a\xba\xe4\x00\x8c\xaa\xcdv\x8c\xaa\xcd\xfd\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xff\x8c\xaa\xcd\xfd\x86\xa2\xc4x\xbe\xe7\xff\x00`t\x85\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x8d\xab\xcf\x00\x8d\xab\xce\x12\x8d\xab\xcev\x8c\xaa\xce\xa8\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xaa\x8c\xaa\xce\xa8\x8c\xaa\xcev\x88\xa5\xc8\x12\x8a\xa8\xcc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x90\xae\xcd\x00\x90\xae\xcd\x00\x91\xaa\xd2\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xa9\xd3\x03\x91\xaa\xd2\x03\x90\xae\xce\x00\x90\xae\xce\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xe0\x00\x00\x07\xe0\x00\x00\x07\xe0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xc0\x00\x00\x03\xe0\x00\x00\x07\xe0\x00\x00\x07\xf8\x00\x00\x1f\xff\xff\xff\xff\xff\xff\xff\xff'

class SocialEngineeringTrainer(CTk):
    def __init__(self):
        super().__init__()
        if isfile("logo.ico"):
            self.iconbitmap("logo.ico")
        else:
            with open("logo.ico", "wb") as file:
                file.write(LOGO)
            self.iconbitmap("logo.ico")
        
        self.title("Осторожно: манипулятор")
        
        # Настройка темы
        set_appearance_mode("dark")
        set_default_color_theme("blue")
        
        # Переменные для отслеживания прогресса
        self.current_question = 0
        self.score = 0
        self.selected_answer = StringVar()
        self.showing_explanation = False
        
        # Примеры вопросов с объяснениями
        with open("questions.json", "r", encoding='utf-8') as file:
            self.questions = loads(file.read())

        self.create_quiz_widgets()
        self.show_question()
        
    def create_quiz_widgets(self):
        # Заголовок
        self.title_label = CTkLabel(
            self,
            text="Тренажер защиты от социальной инженерии",
            font=CTkFont(size=28, weight="bold")
        )
        self.title_label.pack(pady=(30, 10))
        
        # Прогресс текст
        self.progress_label = CTkLabel(
            self,
            text=f"Вопрос 1 из {len(self.questions)}",
            font=CTkFont(size=16),
            text_color=("gray70", "gray30")
        )
        self.progress_label.pack(pady=(10, 5))
        
        # Прогресс бар
        self.progress_bar = CTkProgressBar(
            self,
            width=600,
            height=8,
            progress_color=("blue", "lightblue")
        )
        self.progress_bar.pack(pady=(5, 30))
        self.progress_bar.set(0)
        
        # Вопрос
        self.question_label = CTkLabel(
            self,
            text="",
            font=CTkFont(size=18),
            wraplength=750,
            justify="left"
        )
        self.question_label.pack(pady=(20, 30), padx=50)
        
        # Варианты ответов
        self.radio_buttons = []
        for i in range(4):
            radio = CTkRadioButton(
                self,
                text="",
                variable=self.selected_answer,
                value=str(i),
                font=CTkFont(size=16),
                radiobutton_width=24,
                radiobutton_height=24,
                border_width_checked=6
            )
            radio.pack(anchor="w", pady=10, padx=80)
            self.radio_buttons.append(radio)
        
        # Индикатор правильности ответа
        self.answer_indicator = CTkLabel(
            self,
            text="",
            font=CTkFont(size=18, weight="bold")
        )
        
        # Область для объяснения
        self.explanation_frame = CTkFrame(
            self,
            fg_color="transparent"
        )
        
        self.explanation_title = CTkLabel(
            self.explanation_frame,
            text="Объяснение:",
            font=CTkFont(size=16, weight="bold"),
        )
        
        self.explanation_text = CTkLabel(
            self.explanation_frame,
            text="",
            font=CTkFont(size=15),
            wraplength=700,
            justify="left",
        )
        
        # Кнопка далее
        self.next_button = CTkButton(
            self,
            text="Проверить",
            command=self.check_answer,
            width=200,
            height=45,
            font=CTkFont(size=18, weight="bold"),
            corner_radius=10
        )
        self.next_button.pack(pady=(30, 30))
        
    def show_question(self):
        if self.current_question < len(self.questions):
            question_data = self.questions[self.current_question]
            
            # Обновляем прогресс
            self.progress_label.configure(
                text=f"Вопрос {self.current_question + 1} из {len(self.questions)}"
            )
            self.progress_bar.set((self.current_question) / len(self.questions))
            
            # Показываем вопрос
            self.question_label.configure(text=question_data["question"])
            
            # Показываем варианты ответов
            for i, option in enumerate(question_data["options"]):
                self.radio_buttons[i].configure(
                    text=option,
                    state="normal",
                    text_color=("gray10", "gray90")
                )
            
            # Сбрасываем выбор и скрываем объяснение
            self.selected_answer.set("")
            self.answer_indicator.pack_forget()
            self.explanation_frame.pack_forget()
            self.showing_explanation = False
            self.next_button.configure(text="Проверить")
            
    def check_answer(self):
        if not self.showing_explanation:
            # Проверяем, выбран ли ответ
            if self.selected_answer.get() == "":
                return
            
            # Получаем данные текущего вопроса
            question_data = self.questions[self.current_question]
            selected_idx = int(self.selected_answer.get())
            correct_idx = question_data["correct"]
            
            # Проверяем правильность ответа
            is_correct = selected_idx == correct_idx
            if is_correct:
                self.score += 1
                self.answer_indicator.configure(
                    text="✓ Правильно!",
                    text_color="#00ff00"
                )
            else:
                self.answer_indicator.configure(
                    text="✗ Неправильно",
                    text_color="#ff4444"
                )
            
            # Показываем индикатор
            self.answer_indicator.pack(before=self.next_button, pady=(20, 0))
            
            # Подсвечиваем правильный и неправильный ответы
            for i, radio in enumerate(self.radio_buttons):
                if i == correct_idx:
                    radio.configure(text_color="#00ff00")
                elif i == selected_idx and not is_correct:
                    radio.configure(text_color="#ff4444")
                radio.configure(state="disabled")
            
            # Показываем объяснение
            self.explanation_frame.pack(before=self.next_button, pady=(20, 0), padx=50, fill="x")
            self.explanation_title.pack(pady=(0, 5))
            self.explanation_text.configure(text=question_data['explanation'])
            self.explanation_text.pack()
            
            # Меняем текст кнопки
            if self.current_question < len(self.questions) - 1:
                self.next_button.configure(text="Следующий вопрос")
            else:
                self.next_button.configure(text="Показать результаты")
            
            self.showing_explanation = True
            
        else:
            # Переходим к следующему вопросу
            self.current_question += 1
            
            if self.current_question < len(self.questions):
                self.show_question()
            else:
                self.create_results_widgets()
    
    def create_results_widgets(self):
        # Очищаем окно
        for widget in self.winfo_children():
            widget.destroy()
            
        # Заголовок результатов
        results_title = CTkLabel(
            self,
            text="Результаты тестирования",
            font=CTkFont(size=32, weight="bold")
        )
        results_title.pack(pady=(50, 30))
        
        # Визуальный индикатор результата
        percentage = (self.score / len(self.questions)) * 100
        
        # Круговой прогресс (имитация)
        progress_text = CTkLabel(
            self,
            text=f"{percentage:.0f}%",
            font=CTkFont(size=72, weight="bold"),
            text_color=self.get_result_color(percentage)
        )
        progress_text.pack(pady=20)
        
        # Счет
        score_label = CTkLabel(
            self,
            text=f"Правильных ответов: {self.score} из {len(self.questions)}",
            font=CTkFont(size=20)
        )
        score_label.pack(pady=10)
        
        # Оценка результата
        evaluation = self.get_evaluation(percentage)
        evaluation_label = CTkLabel(
            self,
            text=evaluation,
            font=CTkFont(size=18),
            text_color=self.get_result_color(percentage),
            wraplength=600
        )
        evaluation_label.pack(pady=30)
        
        # Кнопки
        restart_button = CTkButton(
            self,
            text="Пройти заново",
            command=self.restart_quiz,
            width=180,
            height=45,
            font=CTkFont(size=16),
            corner_radius=10
        )
        restart_button.pack(side="left", padx=(250, 20), pady=30)
        
        exit_button = CTkButton(
            self,
            text="Выход",
            command=self.quit,
            width=180,
            height=45,
            font=CTkFont(size=16),
            corner_radius=10,
            fg_color=("gray70", "gray30"),
            hover_color=("gray60", "gray40")
        )
        exit_button.pack(side="left", padx=20, pady=30)
        
    def get_result_color(self, percentage):
        if percentage >= 80:
            return "#00ff00"
        elif percentage >= 60:
            return "#ffaa00"
        else:
            return "#ff4444"
            
    def get_evaluation(self, percentage):
        if percentage >= 80:
            return "Отлично! Вы хорошо защищены от атак социальной инженерии. Продолжайте в том же духе!"
        elif percentage >= 60:
            return "Хорошо! У вас есть базовые знания, но есть области для улучшения. Рекомендуем дополнительное обучение."
        else:
            return "Требуется серьезное улучшение навыков безопасности. Вы уязвимы для атак социальной инженерии."
    
    def restart_quiz(self):
        # Сбрасываем переменные
        self.current_question = 0
        self.score = 0
        self.selected_answer.set("")
        self.showing_explanation = False
        
        # Пересоздаем виджеты
        for widget in self.winfo_children():
            widget.destroy()
            
        self.create_quiz_widgets()
        self.show_question()
        
    def run(self):
        self.mainloop()

if __name__ == "__main__":
    app = SocialEngineeringTrainer()
    app.run()
